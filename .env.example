# Kopi Chatbot API v2.0 - Meta-Persuasion Enabled
# Copy this file to .env and configure your values

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
APP_NAME=Kopi Chatbot API
APP_VERSION=2.0.0
ENVIRONMENT=development
LOG_LEVEL=INFO
API_TIMEOUT_SECONDS=30

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
REDIS_URL=redis://localhost:6379
REDIS_DB=0
REDIS_DECODE_RESPONSES=true

# =============================================================================
# CONVERSATION SETTINGS
# =============================================================================
CONVERSATION_TTL_SECONDS=3600
MAX_CONVERSATION_MESSAGES=10

# =============================================================================
# OPENAI API CONFIGURATION
# =============================================================================
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_ENABLED=true
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_MAX_TOKENS=150
OPENAI_TEMPERATURE=0.7
OPENAI_TIMEOUT=30

# =============================================================================
# META-PERSUASION CONFIGURATION
# =============================================================================
# Enable meta-persuasion analysis and educational features
META_PERSUASION_ENABLED=true
EDUCATIONAL_MODE_ENABLED=true

# Frequency of educational content (0.0 = never, 1.0 = always)
# Recommended: 0.3 (30% chance)
EDUCATIONAL_CONTENT_FREQUENCY=0.3

# =============================================================================
# DEBATE SERVICE CONFIGURATION
# =============================================================================
DEBATE_EDUCATIONAL_MODE=true
DEBATE_ANALYSIS_ENABLED=true

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Configure appropriately for production
CORS_ORIGINS=["*"]
CORS_CREDENTIALS=true
CORS_METHODS=["*"]
CORS_HEADERS=["*"]

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
MAX_MESSAGE_LENGTH=2000
RATE_LIMIT_ENABLED=false
RATE_LIMIT_REQUESTS_PER_MINUTE=60

# =============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# =============================================================================

# DEVELOPMENT ENVIRONMENT (default above)
# - Full logging enabled
# - CORS allows all origins
# - Educational mode enabled
# - Meta-persuasion frequency: 30%

# PRODUCTION ENVIRONMENT
# Uncomment and modify for production:
# ENVIRONMENT=production
# LOG_LEVEL=WARNING
# CORS_ORIGINS=["https://yourdomain.com"]
# EDUCATIONAL_CONTENT_FREQUENCY=0.1
# RATE_LIMIT_ENABLED=true

# TESTING ENVIRONMENT
# Uncomment for testing:
# ENVIRONMENT=testing
# LOG_LEVEL=DEBUG
# REDIS_URL=redis://localhost:6380
# OPENAI_ENABLED=false
# META_PERSUASION_ENABLED=true

# EDUCATIONAL DEMO ENVIRONMENT
# Uncomment for educational demonstrations:
# ENVIRONMENT=demo
# EDUCATIONAL_MODE_ENABLED=true
# EDUCATIONAL_CONTENT_FREQUENCY=0.8
# META_PERSUASION_ENABLED=true

# =============================================================================
# CONFIGURATION NOTES
# =============================================================================

# OPENAI_API_KEY:
# - Required for AI-powered responses
# - If not provided, system will use structured fallback responses
# - Get your key from https://platform.openai.com/

# REDIS_URL:
# - Required for conversation persistence
# - Default connects to local Redis instance
# - For production, use managed Redis service

# META_PERSUASION_ENABLED:
# - Enables analysis of persuasion techniques in messages
# - Adds educational endpoints (/analyze, /demonstrate, etc.)
# - Required for educational features

# EDUCATIONAL_CONTENT_FREQUENCY:
# - Controls how often educational notes are added to responses
# - 0.0 = never add educational content
# - 1.0 = always add educational content
# - 0.3 = 30% chance to add educational content (recommended)

# CONVERSATION_TTL_SECONDS:
# - How long conversations are stored in Redis
# - 3600 = 1 hour (recommended for development)
# - 86400 = 24 hours (good for production)
# - 604800 = 1 week (for extended conversations)

# MAX_CONVERSATION_MESSAGES:
# - Maximum number of messages to keep in conversation history
# - Higher values = more context but more memory usage
# - 10 messages = 5 exchanges (user + bot pairs)

# OPENAI_MODEL OPTIONS:
# - gpt-3.5-turbo: Fast and cost-effective (recommended)
# - gpt-4: Higher quality but slower and more expensive
# - gpt-4-turbo: Balance of quality and speed

# OPENAI_TEMPERATURE:
# - 0.0 = Very focused and deterministic responses
# - 0.7 = Balanced creativity (recommended for debates)
# - 1.0 = More creative and varied responses

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common Issues:

# 1. Redis Connection Failed:
#    - Ensure Redis is running: docker run -p 6379:6379 redis
#    - Check REDIS_URL format: redis://host:port

# 2. OpenAI API Errors:
#    - Verify API key is correct
#    - Check OpenAI account has sufficient credits
#    - Ensure OPENAI_MODEL is valid

# 3. Educational Content Not Appearing:
#    - Check META_PERSUASION_ENABLED=true
#    - Check EDUCATIONAL_MODE_ENABLED=true
#    - Increase EDUCATIONAL_CONTENT_FREQUENCY for testing

# 4. High Memory Usage:
#    - Reduce MAX_CONVERSATION_MESSAGES
#    - Reduce CONVERSATION_TTL_SECONDS
#    - Monitor Redis memory usage

# For more help, check the README.md or run: make help